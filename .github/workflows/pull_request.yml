name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]

permissions: 
  contents: read
  packages: write

env:
  GO_VERSION: '1.23'

jobs:

  run-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    if: ${{ !github.event.pull_request.draft }}
    steps:
      # If the condition above is not met, aka, the PR is not in draft status, then this step is skipped.
      # Because this step is part of the critical path, omission of this step will result in remaining CI steps not gettinge executed.
      # As of 8/8/2022 there is now way to enforce this beahvior in GitHub Actions CI.
      - run: exit 0

  test:
    needs: [run-ci]
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: true
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4


    - name: Generate AWS region file
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ec2 describe-regions --all-regions --region us-east-1 --query "Regions[].RegionName" --output text >> cmd/aws-regions.txt

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6.2.0
      with:  
        args: -v
    
    - name: Execute Go tests
      run: make tests-coverage

    - name: Codecov Upload
      uses: codecov/codecov-action@v5.3.1
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Test CLI
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        go run main.go clean -r us-west-2
        go run main.go version
  
    - name: build & execute
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        echo "--------------------------------------------------"
        go build -ldflags="-X 'github.com/karl-cardenas-coding/go-lambda-cleanup/v2/cmd.VersionString=0.0.0'" -o=glc -v
        ./glc clean -r us-west-2


    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.3.0

    -  name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3


    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}


    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        build-args: VERSION="99.99.99"
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository }}:test